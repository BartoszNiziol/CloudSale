//TODO:This autogenerated class includes the basics for a Registration
//Handler class. You will need to customize it to ensure it meets your needs and
//the data provided by the third party.

global class AutocreatedRegHandler1619434760982 implements Auth.RegistrationHandler{


global User createUser(Id portalId, Auth.UserData data){
    
        Contact contact = new Contact();
           contact.accountId = [SELECT Id FROM account WHERE Id = '0030900000CY5DIAA1' limit 1].Id; // czy to potrzebne ?
           contact.email = data.email;
           contact.firstName = data.firstName;
           contact.lastName = data.lastName;
           insert(contact);

        //TODO: Customize the username and profile. Also check that the username doesn't already exist and
        //possibly ensure there are enough org licenses to create a user. Must be 80 characters or less.
        User u = new User();
        Profile p = [SELECT Id FROM profile WHERE name='Customer Community User'];
        u.username = data.email.substring(0,data.email.indexOf('@')) + '@red.com';
        
        u.CommunityNickname = data.firstName + ' ' + data.lastName;
        u.email = data.email;
        u.lastName = data.lastName;
        u.firstName = data.firstName;
        String alias = data.email.substring(0,data.email.indexOf('@'));
        //Alias must be 8 characters or less
        if(alias.length() > 8) {
            alias = alias.substring(0, 8);
        }
        u.alias = alias;
        u.languagelocalekey = 'en_US';
        u.localesidkey = 'en_US';
        u.emailEncodingKey = 'UTF-8';
        u.timeZoneSidKey = 'America/Los_Angeles';
        u.profileId = p.Id;
        u.contactId = contact.Id ; 
        return u;
  
}

global void updateUser(Id userId, Id portalId, Auth.UserData data){
    User u = new User(id=userId);
    //TODO: Customize the username. Must be 80 characters or less.
    //u.username = data.username + '@myorg.com';
    u.email = data.email;
    u.lastName = data.lastName;
    u.firstName = data.firstName;
    //String alias = data.username;
    //Alias must be 8 characters or less
    //if(alias.length() > 8) {
        //alias = alias.substring(0, 8);
    //}
    //u.alias = alias;
    update(u);
}
}